{"version":3,"sources":["components/uielements/styles/inputNumber.style.js","components/uielements/InputNumber.js","components/colorChooser.style.js","components/colorChoser.js","components/editableComponent.js","components/cart/singleCart.js","containers/Ecommerce/cart/cartTable.style.js","containers/Ecommerce/cart/cart-table.js","containers/Ecommerce/cart/index.js","components/utility/layoutWrapper.style.js","components/utility/layoutWrapper.js"],"names":["AntInputNumber","ComponentName","styled","_templateObject","palette","props","WDInputnumber","InputNumber","Inputnumber","WithDirection","ColorChooserDropdown","div","colorChooser_style_templateObject","borderRadius","Component","onChange","value","isNaN","notification","_this","quantity","changeQuantity","objectID","_this$props","this","price","image","cancelQuantity","_highlightResult","totalPrice","toFixed","react_default","a","createElement","className","onClick","href","alt","src","name","description","min","max","step","ProductsTable","cartTable_style_templateObject","transition","boxShadow","changeProductQuantity","ecommerceActions","CartTable","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","_this2","productQuantity","products","length","map","product","singleCart_default","assign","key","newProductQuantity","forEach","push","style","classname","cartTable_style","concat","renderItems","width","paddingRight","rtl","paddingLeft","input","size","placeholder","uielements_button","type","Link","to","connect","state","_state$Ecommerce","Ecommerce","layoutWrapper","cart_table","LayoutContentWrapper","__webpack_exports__","children"],"mappings":"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","file":"static/js/25.2d403f8e.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst AntInputNumber = ComponentName => styled(ComponentName)`\n  &.ant-input-number {\n    color: ${palette('texy', 1)};\n    padding: 0;\n    font-size: 13px;\n    height: 35px !important;\n    border: 1px solid ${palette('border', 0)};\n    width: 100%;\n    max-width: 80px;\n\n    .ant-input-number-input {\n      height: 33px;\n      color: ${palette('text', 1)};\n      padding: 0 10px;\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n    }\n\n    &.ant-input-number-focused {\n      border-color: ${palette('primary', 0)};\n    }\n\n    .ant-input-number-handler-wrap {\n      left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n      right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n      border-radius: ${props =>\n        props['data-rtl'] === 'rtl' ? '4px 0 0 4px' : '0 4px 4px 0'};\n      border-left: ${props => (props['data-rtl'] === 'rtl' ? 0 : 1)}px solid\n        ${palette('border', 1)};\n      border-right: ${props => (props['data-rtl'] === 'rtl' ? 1 : 0)}px solid\n        ${palette('border', 1)};\n    }\n\n    .ant-input-number-handler-up-inner,\n    .ant-input-number-handler-down-inner {\n      font-size: 23px;\n      color: ${palette('text', 2)};\n\n      &:before {\n        display: block;\n        font-family: 'ionicons' !important;\n      }\n    }\n\n    .ant-input-number-handler-up-inner {\n      &:before {\n        content: '\\f365';\n      }\n    }\n\n    .ant-input-number-handler-down-inner {\n      &:before {\n        content: '\\f35f';\n      }\n    }\n  }\n`;\n\nexport default AntInputNumber;\n","import { InputNumber } from 'antd';\nimport AntInputNumber from './styles/inputNumber.style';\nimport WithDirection from '../../settings/withDirection';\n\nconst WDInputnumber = AntInputNumber(InputNumber);\nconst Inputnumber = WithDirection(WDInputnumber);\n\nexport default Inputnumber;\n","import styled from 'styled-components';\nimport { borderRadius } from '../settings/style-util';\nimport WithDirection from '../settings/withDirection';\n\nconst ColorChooserDropdown = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  max-width: 160px;\n\n  .ant-btn {\n    width: 20px;\n    height: 20px;\n    border: 0;\n    outline: 0;\n    padding: 0;\n    margin: ${props =>\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\n    ${borderRadius('3px')};\n\n    &:last-child {\n      margin: 0;\n    }\n\n    &:nth-child(n + 6) {\n      margin-top: 15px;\n    }\n\n    &:nth-child(5n) {\n      margin-right: 0;\n      margin-left: 0;\n    }\n  }\n`;\n\nexport default WithDirection(ColorChooserDropdown);\n","import React, { Component } from 'react';\nimport Button from './uielements/button';\nimport Popover from './uielements/popover';\nimport ColorChooserDropdown from './colorChooser.style';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.handleVisibleChange = this.handleVisibleChange.bind(this);\n    this.hide = this.hide.bind(this);\n    this.state = {\n      visible: false\n    };\n  }\n  hide() {\n    this.setState({ visible: false });\n  }\n  handleVisibleChange() {\n    this.setState({ visible: !this.state.visible });\n  }\n  render() {\n    const { colors, seectedColor, changeColor } = this.props;\n    const content = () => (\n      <ColorChooserDropdown className=\"isoColorOptions\">\n        {colors.map((color, index) => {\n          const onClick = () => {\n            this.hide();\n            changeColor(index);\n          };\n          const style = {\n            background: color\n          };\n          return <Button key={index} onClick={onClick} style={style} />;\n        })}\n      </ColorChooserDropdown>\n    );\n    return (\n      <Popover\n        content={content()}\n        trigger=\"click\"\n        visible={this.state.visible}\n        onVisibleChange={this.handleVisibleChange}\n      >\n        <Button\n          style={{ backgroundColor: colors[seectedColor] }}\n          className=\"isoColorChooser\"\n        />\n      </Popover>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport { Textarea as Input } from './uielements/input';\n\nexport default class EditableComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.check = this.check.bind(this);\n    this.edit = this.edit.bind(this);\n    this.state = {\n      value: this.props.value,\n      editable: false,\n    };\n  }\n  handleChange(event) {\n    const value = event.target.value;\n    this.setState({ value });\n  }\n  check() {\n    this.setState({ editable: false });\n    if (this.props.onChange) {\n      this.props.onChange(this.props.itemKey, this.state.value);\n    }\n  }\n  edit() {\n    this.setState({ editable: true });\n  }\n\n  render() {\n    const { value, editable } = this.state;\n    return (\n      <div className=\"isoNoteContent\">\n        {editable ? (\n          <div className=\"isoNoteEditWrapper\">\n            <Input\n              rows={3}\n              value={value}\n              onChange={this.handleChange}\n              onPressEnter={this.check}\n            />\n            <Icon\n              type=\"check\"\n              className=\"isoNoteEditIcon\"\n              onClick={this.check}\n            />\n          </div>\n        ) : (\n          <p className=\"isoNoteTextWrapper\" onClick={this.edit}>\n            {value || ' '}\n            <Icon type=\"edit\" className=\"isoNoteEditIcon\" />\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport InputNumber from '../uielements/InputNumber';\nimport { notification } from '../index';\n\nexport default class extends Component {\n  onChange = value => {\n    if (!isNaN(value)) {\n      if (value !== this.props.quantity) {\n        this.props.changeQuantity(this.props.objectID, value);\n      }\n    } else {\n      notification('error', 'Please give valid number');\n    }\n  };\n\n  render() {\n    const {\n      price,\n      quantity,\n      image,\n      objectID,\n      cancelQuantity,\n      _highlightResult,\n    } = this.props;\n    const totalPrice = (price * quantity).toFixed(2);\n    return (\n      <tr>\n        <td\n          className=\"isoItemRemove\"\n          onClick={() => {\n            cancelQuantity(objectID);\n          }}\n        >\n          <a href=\"# \">\n            <i className=\"ion-android-close\" />\n          </a>\n        </td>\n        <td className=\"isoItemImage\">\n          <img alt=\"#\" src={image} />\n        </td>\n        <td className=\"isoItemName\">\n          <h3>{_highlightResult.name.value}</h3>\n          <p>{_highlightResult.description.value}</p>\n        </td>\n        <td className=\"isoItemPrice\">\n          <span className=\"itemPricePrefix\">$</span>\n          {price.toFixed(2)}\n        </td>\n        <td className=\"isoItemQuantity\">\n          <InputNumber\n            min={1}\n            max={1000}\n            value={quantity}\n            step={1}\n            onChange={this.onChange}\n          />\n        </td>\n        <td className=\"isoItemPriceTotal\">${totalPrice}</td>\n      </tr>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport {\n  transition,\n  borderRadius,\n  boxShadow,\n} from '../../../settings/style-util';\nimport WithDirection from '../../../settings/withDirection';\n\nconst ProductsTable = styled.div`\n  width: 100%;\n  background-color: #ffffff;\n  margin: 0 15px;\n\n  @media only screen and (max-width: 767px) {\n    overflow-x: auto;\n    margin: 0;\n  }\n\n  &.bordered {\n    table {\n      tbody {\n        tr {\n          border-bottom: 1px solid ${palette('border', 0)};\n\n          &:last-child {\n            border-bottom: 0;\n          }\n\n          &.isoTotalBill {\n            border-top: 0;\n          }\n        }\n      }\n    }\n  }\n\n  table {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid ${palette('border', 0)};\n\n    @media only screen and (max-width: 767px) {\n      width: 767px;\n      overflow: hidden;\n    }\n\n    /* TABLE HEAD */\n    thead {\n      width: 100%;\n      min-height: 50px;\n      border-bottom: 1px solid ${palette('border', 0)};\n\n      tr {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n\n        th {\n          font-size: 14px;\n          font-weight: 500;\n          color: ${palette('text', 0)};\n          line-height: 1.2;\n          white-space: nowrap;\n          padding: 15px 0;\n          margin: 0 20px;\n          width: 15%;\n          text-align: center;\n\n          &:last-child {\n            margin-right: 0;\n          }\n\n          @media only screen and (max-width: 991px) {\n            margin: 0 10px;\n            flex-shrink: 0;\n          }\n\n          &.isoItemRemove {\n            width: 50px;\n            margin: 0;\n            flex-shrink: 0;\n            margin-left: 15px;\n\n            @media only screen and (max-width: 991px) {\n              width: 30px;\n              margin-left: 10px;\n            }\n          }\n\n          &.isoItemImage {\n            width: 80px;\n            flex-shrink: 0;\n\n            @media only screen and (max-width: 991px) {\n              width: 60px;\n            }\n          }\n\n          &.isoItemName {\n            max-width: none;\n            text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n            width: 45%;\n\n            @media only screen and (max-width: 991px) {\n              margin: 0 10px;\n              flex-shrink: 1;\n            }\n          }\n        }\n      }\n    }\n\n    /* TABLE BODY */\n    tbody {\n      width: 100%;\n\n      tr {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        min-height: 140px;\n        .isoTransition;\n\n        &.isoNoItemMsg {\n          min-height: 300px;\n          justify-content: center;\n          font-size: 30px;\n          font-weight: 300;\n          color: ${palette('grayscale', 1)};\n          line-height: 1.2;\n        }\n\n        td {\n          font-size: 14px;\n          font-weight: 500;\n          color: ${palette('text', 0)};\n          line-height: 1.2;\n          overflow: hidden;\n          padding: 15px 0;\n          margin: 0 20px;\n          width: 15%;\n          text-align: center;\n\n          &:last-child {\n            margin-right: 0;\n          }\n\n          @media only screen and (max-width: 991px) {\n            margin: 0 10px;\n            flex-shrink: 0;\n          }\n\n          h3 {\n            font-size: 14px;\n            font-weight: 500;\n            color: ${palette('text', 0)};\n            line-height: 1.2;\n            margin-bottom: 10px;\n          }\n\n          p {\n            font-size: 12px;\n            font-weight: 400;\n            color: ${palette('text', 2)};\n            line-height: 1.5;\n          }\n\n          span {\n            font-size: 14px;\n            font-weight: 500;\n            color: ${palette('text', 0)};\n          }\n\n          &.isoItemRemove {\n            text-align: center;\n            width: 50px;\n            margin: 0;\n            flex-shrink: 0;\n            margin-left: 15px;\n\n            a {\n              color: ${palette('text', 0)};\n              ${transition()};\n\n              &:hover {\n                color: ${palette('primary', 0)};\n              }\n            }\n\n            @media only screen and (max-width: 991px) {\n              width: 30px;\n              margin-left: 10px;\n            }\n          }\n\n          &.isoItemImage {\n            width: 80px;\n            flex-shrink: 0;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            img {\n              width: 100%;\n              height: 100%;\n              object-fit: cover;\n            }\n\n            @media only screen and (max-width: 991px) {\n              width: 60px;\n            }\n          }\n\n          &.isoItemName {\n            text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n            max-width: none;\n            width: 45%;\n\n            @media only screen and (max-width: 991px) {\n              margin: 0 10px;\n              flex-shrink: 1;\n            }\n          }\n\n          .ant-input-number {\n            background-color: transparent;\n\n            &.ant-input-number-focused {\n              .isoBoxShadow(none);\n              ${boxShadow()};\n            }\n\n            .ant-input-number-handler-wrap {\n              background-color: transparent;\n            }\n\n            .ant-input-number-input {\n              background-color: transparent;\n            }\n          }\n        }\n\n        &.isoTotalBill {\n          border-top: 1px solid ${palette('border', 0)};\n          padding-top: 10px;\n          min-height: 100px;\n\n          &:hover {\n            background-color: #fff;\n          }\n        }\n      }\n    }\n\n    /* TABLE FOOTER */\n    tfoot {\n      width: 100%;\n      padding: 25px;\n      padding-top: 10px;\n\n      tr {\n        width: 100%;\n        display: flex;\n        align-items: center;\n\n        &.isoTotalBill {\n          justify-content: flex-end;\n\n          td {\n            width: 15%;\n          }\n        }\n\n        td {\n          .ant-input {\n            ${borderRadius('2px')};\n          }\n\n          .ant-btn {\n            height: 42px;\n            min-width: 125px;\n            ${borderRadius('2px')};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default WithDirection(ProductsTable);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../../components/uielements/input\";\nimport Button from \"../../../components/uielements/button\";\nimport ecommerceActions from \"../../../redux/ecommerce/actions\";\nimport SingleCart from \"../../../components/cart/singleCart\";\nimport ProductsTable from \"./cartTable.style\";\nimport { rtl } from \"../../../settings/withDirection\";\n\nconst { changeProductQuantity } = ecommerceActions;\n\nlet totalPrice = 0;\nclass CartTable extends Component {\n  constructor(props) {\n    super(props);\n    this.changeQuantity = this.changeQuantity.bind(this);\n    this.cancelQuantity = this.cancelQuantity.bind(this);\n  }\n  renderItems() {\n    const { productQuantity, products } = this.props;\n    totalPrice = 0;\n    if (!productQuantity || productQuantity.length === 0) {\n      return <tr className=\"isoNoItemMsg\">No item found</tr>;\n    }\n    return productQuantity.map(product => {\n      totalPrice += product.quantity * products[product.objectID].price;\n      return (\n        <SingleCart\n          key={product.objectID}\n          quantity={product.quantity}\n          changeQuantity={this.changeQuantity}\n          cancelQuantity={this.cancelQuantity}\n          {...products[product.objectID]}\n        />\n      );\n    });\n  }\n  changeQuantity(objectID, quantity) {\n    const { productQuantity } = this.props;\n    const newProductQuantity = [];\n    productQuantity.forEach(product => {\n      if (product.objectID !== objectID) {\n        newProductQuantity.push(product);\n      } else {\n        newProductQuantity.push({\n          objectID,\n          quantity\n        });\n      }\n    });\n    this.props.changeProductQuantity(newProductQuantity);\n  }\n  cancelQuantity(objectID) {\n    const { productQuantity } = this.props;\n    const newProductQuantity = [];\n    productQuantity.forEach(product => {\n      if (product.objectID !== objectID) {\n        newProductQuantity.push(product);\n      }\n    });\n    this.props.changeProductQuantity(newProductQuantity);\n  }\n  render() {\n    const { style } = this.props;\n    const classname = style != null ? style : \"\";\n    return (\n      <ProductsTable className={`isoCartTable ${classname}`}>\n        <table>\n          <thead>\n            <tr>\n              <th className=\"isoItemRemove\" />\n              <th className=\"isoItemImage\" />\n              <th className=\"isoItemName\">Name</th>\n              <th className=\"isoItemPrice\">Price</th>\n              <th className=\"isoItemQuantity\">Quantity</th>\n              <th className=\"isoItemPriceTotal\">Total</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.renderItems()}\n            <tr className=\"isoTotalBill\">\n              <td className=\"isoItemRemove\" />\n              <td className=\"isoItemImage\" />\n              <td className=\"isoItemName\" />\n              <td className=\"isoItemPrice\" />\n              <td className=\"isoItemQuantity\">Total</td>\n              <td className=\"isoItemPriceTotal\">${totalPrice.toFixed(2)}</td>\n            </tr>\n          </tbody>\n\n          <tfoot>\n            <tr>\n              <td\n                style={{\n                  width: \"100%\",\n                  paddingRight: `${rtl === \"rtl\" ? \"0\" : \"25px\"}`,\n                  paddingLeft: `${rtl === \"rtl\" ? \"25px\" : \"0\"}`\n                }}\n              >\n                <Input size=\"large\" placeholder=\"Discount Coupon\" />\n              </td>\n              <td\n                style={{\n                  paddingRight: `${rtl === \"rtl\" ? \"0\" : \"25px\"}`,\n                  paddingLeft: `${rtl === \"rtl\" ? \"25px\" : \"0\"}`\n                }}\n              >\n                <Button>Apply</Button>\n              </td>\n              <td>\n                <Button type=\"primary\">\n                  <Link to={\"/dashboard/checkout\"}>Checkout</Link>\n                </Button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </ProductsTable>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const { productQuantity, products } = state.Ecommerce;\n  return { productQuantity, products };\n}\nexport default connect(mapStateToProps, { changeProductQuantity })(CartTable);\n","import React, { Component } from \"react\";\nimport LayoutWrapper from \"../../../components/utility/layoutWrapper\";\nimport CartTable from \"./cart-table\";\n\nexport default class extends Component {\n  render() {\n    return (\n      <LayoutWrapper>\n        <CartTable className=\"bordered\" />\n      </LayoutWrapper>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import React from \"react\";\nimport { LayoutContentWrapper } from \"./layoutWrapper.style\";\n\nexport default props => (\n  <LayoutContentWrapper\n    className={\n      props.className != null\n        ? `${props.className} isoLayoutContentWrapper`\n        : \"isoLayoutContentWrapper\"\n    }\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n"],"sourceRoot":""}